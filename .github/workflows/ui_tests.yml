name: UI Tests

on:
  workflow_call:
    inputs:
      branch:
        description: 'The branch to use'
        default: 'V3'
        required: false
        type: string
      base-url:
        description: 'The web3modal lab url'
        default: 'http://localhost:3000/'
        required: false
        type: string
      wallet-url:
        description: 'The wallet url'
        default: 'https://react-wallet.walletconnect.com/'
        required: false
        type: string
      command:
        description: 'The test command to run'
        default: 'playwright:test'
        required: false
        type: string
      skip-playwright-webserver:
        description: 'Skip setting up a local test server'
        default: false
        required: false
        type: boolean
    secrets:
      NEXT_PUBLIC_PROJECT_ID:
        required: true
      TESTS_NEXTAUTH_SECRET:
        required: false
      TESTS_MAILSEC_API_KEY:
        required: false

jobs:
  ui_tests:
    name: 'Playwright Tests'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          repository: WalletConnect/web3modal
          ref: ${{ inputs.branch }}
      - name: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['apps/laboratory']['devDependencies']['@playwright/test'])")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: install
        run: npm ci
      - name: build
        run: npm run build
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: ./apps/laboratory/
        run: npm run playwright:install
      - name: Run Playwright tests
        env:
          BASE_URL: ${{ inputs.base-url }}
          WALLET_URL: ${{ inputs.wallet-url }}
          NEXT_PUBLIC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          SKIP_PLAYWRIGHT_WEBSERVER: ${{ inputs.skip-playwright-webserver }}
          NEXTAUTH_SECRET: ${{ secrets.TESTS_NEXTAUTH_SECRET }}
          MAILSAC_API_KEY: ${{ secrets.TESTS_MAILSEC_API_KEY }}
          CI: true
        working-directory: ./apps/laboratory/
        run: npm run ${{ inputs.command }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./apps/laboratory/playwright-report/
          retention-days: 7
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: ./apps/laboratory/screenshots/
          retention-days: 7
